<?xml version="1.0" encoding="UTF-8"?>

<!-- The Derby database for jpaTest -->

<datasources>
   <xa-datasource>

      <!-- The jndi name of the DataSource, it is prefixed with java: -->
      <!-- Datasources are not available outside the virtual machine -->
      <jndi-name>jpaTestJtaDS</jndi-name>

      <!--  A boolean indicating if the jndi-name should be prefixed with java: which causes the 
            DataSource to only be accessible from within the jboss server vm. 
            The default is true. 
      -->
      <use-java-context>true</use-java-context>

      <connection-url>jdbc:derby://localhost:1527/jpatest</connection-url>

      <!-- The driver class 
      <driver-class>org.apache.derby.jdbc.ClientXADataSource</driver-class>
      -->

      <xa-datasource-class>org.apache.derby.jdbc.ClientXADataSource</xa-datasource-class>    
      <xa-datasource-property name="databaseName">jpatest</xa-datasource-property>

      <!--
      <xa-datasource-property name="SomeOtherProperty">SomeOtherValue</xa-datasource-property>
      -->

      <!-- The login and password -->
      <user-name>jpatest</user-name>
      <password>jpatest</password>

      <!--example of how to specify class that determines if exception means connection should be destroyed-->
      <!--exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter</exception-sorter-class-name-->

      <!-- this will be run before a managed connection is removed from the pool for use by a client-->
      <!--<check-valid-connection-sql>select * from something</check-valid-connection-sql> -->

      <!-- The minimum connections in a pool/sub-pool. Pools are lazily constructed on first use -->
      <min-pool-size>5</min-pool-size>

      <!-- The maximum connections in a pool/sub-pool -->
      <max-pool-size>20</max-pool-size>

      <!-- The time before an unused connection is destroyed -->
      <!-- NOTE: This is the check period. It will be destroyed somewhere between 1x and 2x this timeout after last use -->
      <!-- TEMPORARY FIX! - Disable idle connection removal, HSQLDB has a problem with not reaping threads on closed connections -->
      <idle-timeout-minutes>0</idle-timeout-minutes>

      <!-- sql to call when connection is created
        <new-connection-sql>some arbitrary sql</new-connection-sql>
      -->

      <!-- sql to call on an existing pooled connection when it is obtained from pool 
         <check-valid-connection-sql>some arbitrary sql</check-valid-connection-sql>
      -->

      <!-- example of how to specify a class that determines a connection is valid before it is handed out from the pool
         <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyValidConnectionChecker</valid-connection-checker-class-name>
      -->

      <!-- Whether to check all statements are closed when the connection is returned to the pool,
           this is a debugging feature that should be turned off in production -->
      <track-statements/>

      <!-- Use the getConnection(user, pw) for logins
        <application-managed-security/>
      -->

      <!-- Use the security domain defined in conf/login-config.xml 
      <security-domain>HsqlDbRealm</security-domain>
      -->

      <!-- Use the security domain defined in conf/login-config.xml or the
           getConnection(user, pw) for logins. The security domain takes precedence.
        <security-domain-and-application>HsqlDbRealm</security-domain-and-application>
      -->

      <!-- HSQL DB benefits from prepared statement caching -->
      <prepared-statement-cache-size>32</prepared-statement-cache-size>

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) --> 
      <metadata>
         <type-mapping>Derby</type-mapping>
      </metadata>
      

      <!-- When using in-process (standalone) mode 
      <depends>jboss:service=Hypersonic,database=localDB</depends>
      -->
      <!-- Uncomment when using hsqldb in server mode
      <depends>jboss:service=Hypersonic</depends>
      -->
   </xa-datasource>


   <local-tx-datasource>

      <!-- The jndi name of the DataSource, it is prefixed with java:/ -->
      <!-- Datasources are not available outside the virtual machine -->
      <jndi-name>jpaTestDS</jndi-name>


      <!--  A boolean indicating if the jndi-name should be prefixed with java: which causes the 
            DataSource to only be accessible from within the jboss server vm. 
            The default is true. 
      -->
      <use-java-context>true</use-java-context>


      <connection-url>jdbc:derby://localhost:1527/jpatest</connection-url>

      <!-- The driver class -->
      <driver-class>org.apache.derby.jdbc.ClientDriver</driver-class>

      <!-- The login and password -->
      <user-name>jpatest</user-name>
      <password>jpatest</password>

      <transaction-isolation>TRANSACTION_SERIALIZABLE</transaction-isolation>

      <!--example of how to specify class that determines if exception means connection should be destroyed-->
      <!--exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter</exception-sorter-class-name-->

      <!-- this will be run before a managed connection is removed from the pool for use by a client-->
      <!--<check-valid-connection-sql>select * from something</check-valid-connection-sql> -->

      <!-- The minimum connections in a pool/sub-pool. Pools are lazily constructed on first use -->
      <min-pool-size>5</min-pool-size>

      <!-- The maximum connections in a pool/sub-pool -->
      <max-pool-size>20</max-pool-size>

      <!-- The time before an unused connection is destroyed -->
      <!-- NOTE: This is the check period. It will be destroyed somewhere between 1x and 2x this timeout after last use -->
      <!-- TEMPORARY FIX! - Disable idle connection removal, HSQLDB has a problem with not reaping threads on closed connections -->
      <idle-timeout-minutes>0</idle-timeout-minutes>

      
      
      <!-- Whether to check all statements are closed when the connection is returned to the pool,
           this is a debugging feature that should be turned off in production -->
      <track-statements/>

      
      <!-- Use the security domain defined in conf/login-config.xml 
      <security-domain>HsqlDbRealm</security-domain>
      -->
  
   
      <!-- HSQL DB benefits from prepared statement caching -->
      <prepared-statement-cache-size>32</prepared-statement-cache-size>

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
      <metadata>
         <type-mapping>Derby</type-mapping>
      </metadata>
      
      <!-- When using in-process (standalone) mode 
      <depends>jboss:service=Hypersonic,database=localDB</depends>
      -->
      <!-- Uncomment when using hsqldb in server mode
      <depends>jboss:service=Hypersonic</depends>
      -->
   </local-tx-datasource>



   <!-- Uncomment if you want hsqldb accessed over tcp (server mode)
   <mbean code="org.jboss.jdbc.HypersonicDatabase" 
     name="jboss:service=Hypersonic">
     <attribute name="Port">        
        <value-factory bean="ServiceBindingManager" method="getIntBinding" 
           parameter="jboss:service=Hypersonic"/>
      </attribute>
     <attribute name="BindAddress">${jboss.bind.address}</attribute>     
     <attribute name="Silent">true</attribute>
     <attribute name="Database">default</attribute>
     <attribute name="Trace">false</attribute>
     <attribute name="No_system_exit">true</attribute>
   </mbean>
   -->

   <!-- For hsqldb accessed from jboss only, in-process (standalone) mode 
   <mbean code="org.jboss.jdbc.HypersonicDatabase" 
     name="jboss:service=Hypersonic,database=localDB">
     <attribute name="Database">localDB</attribute>
     <attribute name="InProcessMode">true</attribute>
   </mbean>
  --> 
   
</datasources>
